import telebot
import requests
import random
from collections import defaultdict

bot = telebot.TeleBot('7627109915:AAGw5hTJVOlBasDFGJBj_lyPye66rshZrg4')
MY_CHAT_ID = 6707920884
OPENROUTER_API_KEY = "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"
OPENROUTER_API_URL = "https://openrouter.ai/api/v1/chat/completions"

user_states = {}
battle_scores = {}
profiles = defaultdict(lambda: {"nick": None, "battle_nick": None, "desc": "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è", "avatar": None})
leaderboard_battle = defaultdict(lambda: {"wins": 0, "games": 0})
leaderboard_rhyme = defaultdict(lambda: {"longest_rounds": 0})
online_battles = {}
searching_users = set()  # –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –≤ –ø–æ–∏—Å–∫–µ

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
start_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
start_markup.add("üé§ –†–µ–ø-–±–∞—Ç—Ç–ª", "üéµ –ò–≥—Ä–∞ –≤ —Ä–∏—Ñ–º—É")
start_markup.add("üèÜ –õ–∏–¥–µ—Ä–±–æ—Ä–¥", "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
start_markup.add("üåê –û–Ω–ª–∞–π–Ω", "–°–∞–π—Ç", "–°–≤—è–∑—å")

rivals_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
rivals_markup.add("–ì–æ–≥–æ–ª—å", "–ü—É—à–∫–∏–Ω", "–ï—Å–µ–Ω–∏–Ω", "–õ–µ—Ä–º–æ–Ω—Ç–æ–≤", "–¢–æ–ª—Å—Ç–æ–π")

game_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
game_menu.add("üîô –ù–∞–∑–∞–¥", "üîÑ –°–º–µ–Ω–∏—Ç—å –ø–æ—ç—Ç–∞")

online_battle_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
online_battle_menu.add("üîô –ù–∞–∑–∞–¥")

profile_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
profile_menu.add("–°–º–µ–Ω–∏—Ç—å –Ω–∏–∫", "–°–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", "–°–º–µ–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä", "üîô –ù–∞–∑–∞–¥")

online_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
online_menu.add("–°–ª—É—á–∞–π–Ω—ã–π —Å–æ–ø–µ—Ä–Ω–∏–∫", "–ü–æ ID", "üîô –ù–∞–∑–∞–¥")

battle_invite = telebot.types.InlineKeyboardMarkup()
battle_invite.add(
    telebot.types.InlineKeyboardButton("‚úÖ –°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è", callback_data="battle_yes"),
    telebot.types.InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="battle_no")
)

online_game = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
online_game.add("üé§ –ë–∞—Ç—Ç–ª", "üîô –ù–∞–∑–∞–¥")


# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–ø–µ—Ä—Å–∫–æ–≥–æ —Å—Ç–∏—Ö–∞
def generate_poem(author, round_num=1):
    prompt_dict = {
        "–ì–æ–≥–æ–ª—å": f"–ù–∞–ø–∏—à–∏ 4-—Å—Ç—Ä–æ—á–Ω—ã–π —Ä–µ–ø –≤ –º—Ä–∞—á–Ω–æ–º —Å—Ç–∏–ª–µ –ì–æ–≥–æ–ª—è, —Ä–∞—É–Ω–¥ {round_num}. –ò—Å–ø–æ–ª—å–∑—É–π —Ç–µ–º–Ω—ã–µ –æ–±—Ä–∞–∑—ã (–Ω–æ—á—å, —Ç–µ–Ω–∏, –∑–ª–æ), –∂–µ—Å—Ç–∫–∏–π —Ä–∏—Ç–º –∏ —á–µ—Ç–∫—É—é —Ä–∏—Ñ–º—É (1-3, 2-4 –∏–ª–∏ 1-4, 2-3).",
        "–ü—É—à–∫–∏–Ω": f"–ù–∞–ø–∏—à–∏ 4-—Å—Ç—Ä–æ—á–Ω—ã–π —Ä–µ–ø –≤ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–º —Å—Ç–∏–ª–µ –ü—É—à–∫–∏–Ω–∞, —Ä–∞—É–Ω–¥ {round_num}. –ò—Å–ø–æ–ª—å–∑—É–π —Å–≤–µ—Ç–ª—ã–µ –æ–±—Ä–∞–∑—ã (–ª—É–Ω–∞, –ª—é–±–æ–≤—å, –∑–≤–µ–∑–¥—ã), –ø–ª–∞–≤–Ω—ã–π —Ä–∏—Ç–º –∏ —á–µ—Ç–∫—É—é —Ä–∏—Ñ–º—É (1-3, 2-4 –∏–ª–∏ 1-4, 2-3).",
        "–ï—Å–µ–Ω–∏–Ω": f"–ù–∞–ø–∏—à–∏ 4-—Å—Ç—Ä–æ—á–Ω—ã–π —Ä–µ–ø –≤ –ª–∏—Ä–∏—á–Ω–æ–º —Å—Ç–∏–ª–µ –ï—Å–µ–Ω–∏–Ω–∞, —Ä–∞—É–Ω–¥ {round_num}. –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ –æ–±—Ä–∞–∑—ã (–ø–æ–ª—è, —Ä–µ–∫–∏, –ª–µ—Å), –¥—É—à–µ–≤–Ω—ã–π —Ä–∏—Ç–º –∏ —á–µ—Ç–∫—É—é —Ä–∏—Ñ–º—É (1-3, 2-4 –∏–ª–∏ 1-4, 2-3).",
        "–õ–µ—Ä–º–æ–Ω—Ç–æ–≤": f"–ù–∞–ø–∏—à–∏ 4-—Å—Ç—Ä–æ—á–Ω—ã–π —Ä–µ–ø –≤ –¥—Ä–∞–º–∞—Ç–∏—á–Ω–æ–º —Å—Ç–∏–ª–µ –õ–µ—Ä–º–æ–Ω—Ç–æ–≤–∞, —Ä–∞—É–Ω–¥ {round_num}. –ò—Å–ø–æ–ª—å–∑—É–π –æ–±—Ä–∞–∑—ã –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–∞ –∏ –±–æ—Ä—å–±—ã (–≥–æ—Ä—ã, –±—É—Ä—è, —Å—É–¥—å–±–∞), –º–æ—â–Ω—ã–π —Ä–∏—Ç–º –∏ —á–µ—Ç–∫—É—é —Ä–∏—Ñ–º—É (1-3, 2-4 –∏–ª–∏ 1-4, 2-3).",
        "–¢–æ–ª—Å—Ç–æ–π": f"–ù–∞–ø–∏—à–∏ 4-—Å—Ç—Ä–æ—á–Ω—ã–π —Ä–µ–ø –≤ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–æ–º —Å—Ç–∏–ª–µ –¢–æ–ª—Å—Ç–æ–≥–æ, —Ä–∞—É–Ω–¥ {round_num}. –ò—Å–ø–æ–ª—å–∑—É–π –æ–±—Ä–∞–∑—ã –∂–∏–∑–Ω–∏ –∏ –º–æ—Ä–∞–ª–∏ (–¥—É—à–∞, –ø—Ä–∞–≤–¥–∞, –ø—É—Ç—å), –≥–ª—É–±–æ–∫–∏–π —Ä–∏—Ç–º –∏ —á–µ—Ç–∫—É—é —Ä–∏—Ñ–º—É (1-3, 2-4 –∏–ª–∏ 1-4, 2-3)."
    }
    headers = {"Authorization": f"Bearer {OPENROUTER_API_KEY}", "Content-Type": "application/json"}
    payload = {
        "model": "openai/gpt-4o-mini",
        "messages": [
            {"role": "system",
             "content": "–¢—ã —Ä–µ–ø–µ—Ä –≤ —Å—Ç–∏–ª–µ —Ä—É—Å—Å–∫–∏—Ö –∫–ª–∞—Å—Å–∏–∫–æ–≤. –ü–∏—à–∏ —Ä–æ–≤–Ω–æ 4 —Å—Ç—Ä–æ–∫–∏ —Å —è—Ä–∫–∏–º–∏ –æ–±—Ä–∞–∑–∞–º–∏, —á–µ—Ç–∫–∏–º —Ä–∏—Ç–º–æ–º –∏ –∑–≤—É—á–Ω–æ–π —Ä–∏—Ñ–º–æ–π (1-3, 2-4 –∏–ª–∏ 1-4, 2-3). –°—Ç—Ä–æ–≥–æ —Å–ª–µ–¥–∏ –∑–∞ —Å—Ç–∏–ª–µ–º –∏ —Ä–∏—Ñ–º–æ–π, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤."},
            {"role": "user", "content": prompt_dict[author]}
        ],
        "max_tokens": 150,
        "temperature": 0.8
    }
    try:
        response = requests.post(OPENROUTER_API_URL, json=payload, headers=headers)
        response.raise_for_status()
        poem = response.json()["choices"][0]["message"]["content"].strip()
        lines = poem.split("\n")
        while len(lines) < 4:
            lines.append("...")
        return "\n".join(lines[:4])
    except requests.exceptions.RequestException as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {str(e)}"


# –û—Ü–µ–Ω–∫–∞ —Å—Ç–∏—Ö–∞
def evaluate_poem(poem, is_user=False):
    prompt = f"–û—Ü–µ–Ω–∏ —ç—Ç–æ—Ç 4-—Å—Ç—Ä–æ—á–Ω—ã–π —Ä–µ–ø –ø–æ —à–∫–∞–ª–µ 1-10. –£—á–∏—Ç—ã–≤–∞–π —Ä–∏—Ç–º, —á–µ—Ç–∫–æ—Å—Ç—å —Ä–∏—Ñ–º—ã –∏ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ–∫—Å—Ç–∞. –ï—Å–ª–∏ —Ä–∏—Ñ–º—ã –Ω–µ—Ç –∏–ª–∏ —Ç–µ–∫—Å—Ç –∫–æ—Ä–æ—á–µ 4 —Å—Ç—Ä–æ–∫, —Å–Ω–∏–∂–∞–π –æ—Ü–µ–Ω–∫—É. –í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ.\n\n{poem}"
    headers = {"Authorization": f"Bearer {OPENROUTER_API_KEY}", "Content-Type": "application/json"}
    payload = {
        "model": "openai/gpt-4o-mini",
        "messages": [
            {"role": "system",
             "content": "–¢—ã –∫—Ä–∏—Ç–∏–∫ —Ä–µ–ø–∞. –û—Ü–µ–Ω–∏–≤–∞–π —Å—Ç—Ä–æ–≥–æ: —Ä–∏—Ç–º, —Ä–∏—Ñ–º–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–æ ‚Äî –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã. –í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10."},
            {"role": "user", "content": prompt}
        ],
        "max_tokens": 10,
        "temperature": 0.5
    }
    try:
        response = requests.post(OPENROUTER_API_URL, json=payload, headers=headers)
        response.raise_for_status()
        score = response.json()["choices"][0]["message"]["content"].strip()
        return int(score) if score.isdigit() and 1 <= int(score) <= 10 else 5
    except requests.exceptions.RequestException as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ü–µ–Ω–∫–∏: {str(e)}"


# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∏—Ñ–º—ã
def generate_rhyme(user_line):
    headers = {"Authorization": f"Bearer {OPENROUTER_API_KEY}", "Content-Type": "application/json"}
    payload = {
        "model": "openai/gpt-4o-mini",
        "messages": [
            {"role": "system",
             "content": "–ü–∏—à–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –ü—Ä–æ–¥–æ–ª–∂–∞–π —Å—Ç—Ä–æ–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–¥–Ω–æ–π –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π, —Å—Ç—Ä–æ–≥–æ —Ä–∏—Ñ–º—É—è –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º —Å—Ç—Ä–æ–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ù–µ –ø–æ–≤—Ç–æ—Ä—è–π –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ —Å—Ç—Ä–æ–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –†–∏—Ñ–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏."},
            {"role": "user", "content": f"–ü—Ä–æ–¥–æ–ª–∂–∏ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π, –∑–∞—Ä–∏—Ñ–º—É–π –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ —Å—Ç—Ä–æ–∫–∏ '{user_line}'."}
        ],
        "max_tokens": 50,
        "temperature": 0.8
    }
    try:
        response = requests.post(OPENROUTER_API_URL, json=payload, headers=headers)
        response.raise_for_status()
        return response.json()["choices"][0]["message"]["content"].strip()
    except requests.exceptions.RequestException as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–∏—Ñ–º—ã: {str(e)}"


@bot.message_handler(commands=['start'])
def main(message):
    user_states[message.chat.id] = None
    if message.chat.id not in profiles:
        profiles[message.chat.id]["nick"] = message.from_user.username or f"User_{message.chat.id}"
    bot.send_message(message.chat.id, (
        "üé§ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –†–µ–ø-–ê—Ä–µ–Ω—É!** üé§\n"
        "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        "üé§ **–†–µ–ø-–±–∞—Ç—Ç–ª**: –î–æ–∫–∞–∂–∏, —á—Ç–æ —Ç—ã –ª—É—á—à–∏–π!\n"
        "üéµ **–ò–≥—Ä–∞ –≤ —Ä–∏—Ñ–º—É**: –ü–æ–∫–∞–∂–∏ —Å–≤–æ–π —Å–ª–æ–≥.\n"
        "üèÜ **–õ–∏–¥–µ—Ä–±–æ—Ä–¥**: –ö—Ç–æ –≤ —Ç–æ–ø–µ?\n"
        "üë§ **–ü—Ä–æ—Ñ–∏–ª—å**: –ù–∞—Å—Ç—Ä–æ–π —Å–≤–æ–π —Å—Ç–∏–ª—å.\n"
        "üåê **–û–Ω–ª–∞–π–Ω**: –ë–∞—Ç—Ç–ª —Å –∂–∏–≤—ã–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏.\n"
        "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        "–í—ã–±–∏—Ä–∞–π —Ä–µ–∂–∏–º –∏ –≤—Ä—ã–≤–∞–π—Å—è!"
    ), reply_markup=start_markup)


@bot.message_handler(content_types=['text', 'photo', 'video', 'voice', 'video_note'])
def handle_message(message):
    chat_id = message.chat.id
    username = profiles[chat_id]["battle_nick"] or profiles[chat_id]["nick"]

    if message.text == "üé§ –†–µ–ø-–±–∞—Ç—Ç–ª":
        bot.delete_message(chat_id, message.message_id)
        bot.send_message(chat_id, (
            "üé§ **–†–µ–ø-–±–∞—Ç—Ç–ª** üé§\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            "üìú –ü—Ä–∞–≤–∏–ª–∞:\n"
            "  ‚Ä¢ 3 —Ä–∞—É–Ω–¥–∞\n"
            "  ‚Ä¢ –ü–∏—à–∏ 4 —Å—Ç—Ä–æ–∫–∏ —Å —Ä–∏—Ñ–º–æ–π\n"
            "  ‚Ä¢ –î–æ 2 –ø–æ–±–µ–¥\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            "–í—ã–±–µ—Ä–∏ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:"
        ), reply_markup=rivals_markup)

    elif message.text == "üéµ –ò–≥—Ä–∞ –≤ —Ä–∏—Ñ–º—É":
        bot.delete_message(chat_id, message.message_id)
        bot.send_message(chat_id, (
            "üéµ **–ò–≥—Ä–∞ –≤ —Ä–∏—Ñ–º—É** üéµ\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            "üìú –ü—Ä–∞–≤–∏–ª–∞:\n"
            "  ‚Ä¢ –ö–∏–¥–∞–π —Å—Ç—Ä–æ–∫—É\n"
            "  ‚Ä¢ –Ø —Ä–∏—Ñ–º—É—é –≤ –æ—Ç–≤–µ—Ç\n"
            "  ‚Ä¢ –ü–∏—à–∏ '—Å—Ç–æ–ø' –¥–ª—è —Ñ–∏–Ω–∏—à–∞\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            "–ù–∞—á–∏–Ω–∞–π!"
        ), reply_markup=game_menu)
        user_states[chat_id] = {"state": "rhyme_game", "rounds": 0}

    elif message.text == "üèÜ –õ–∏–¥–µ—Ä–±–æ—Ä–¥":
        top_battle = sorted(leaderboard_battle.items(),
                            key=lambda x: x[1]["wins"] / x[1]["games"] if x[1]["games"] else 0, reverse=True)[:10]
        top_rhyme = sorted(leaderboard_rhyme.items(), key=lambda x: x[1]["longest_rounds"], reverse=True)[:10]
        bot.send_message(chat_id, (
                "üèÜ **–õ–∏–¥–µ—Ä–±–æ—Ä–¥** üèÜ\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                "üé§ **–¢–æ–ø-10 –†–µ–ø-–±–∞—Ç—Ç–ª**:\n" + "\n".join(
            f"  ‚Ä¢ @{u}: {d['wins']}/{d['games']} ({d['wins'] / d['games'] * 100:.1f}%)"
            for u, d in top_battle
        ) + "\n\nüéµ **–¢–æ–ø-10 –ò–≥—Ä–∞ –≤ —Ä–∏—Ñ–º—É**:\n" + "\n".join(
            f"  ‚Ä¢ @{u}: {d['longest_rounds']} —Ä–∞—É–Ω–¥–æ–≤"
            for u, d in top_rhyme
        ) + "\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        ))

    elif message.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å":
        profile = profiles[chat_id]
        nick = profile["nick"]
        battle_nick = profile["battle_nick"] or "–ù–µ –∑–∞–¥–∞–Ω"
        desc = profile["desc"]
        avatar = profile["avatar"]
        msg = (
            "üë§ **–ü—Ä–æ—Ñ–∏–ª—å** üë§\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"üÜî ID: `{chat_id}`\n"
            f"üé© –ù–∏–∫ Telegram: @{nick}\n"
            f"üé§ –ù–∏–∫ –≤ –±–∞—Ç—Ç–ª–∞—Ö: {battle_nick}\n"
            f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {desc}"
        )
        if avatar:
            bot.send_photo(chat_id, avatar, caption=msg, reply_markup=profile_menu, parse_mode="Markdown")
        else:
            bot.send_message(chat_id, msg + "\nüñº –ê–≤–∞—Ç–∞—Ä: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ", reply_markup=profile_menu,
                             parse_mode="Markdown")

    elif message.text == "üåê –û–Ω–ª–∞–π–Ω":
        bot.send_message(chat_id, (
            "üåê **–û–Ω–ª–∞–π–Ω-—Ä–µ–∂–∏–º** üåê\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            "üìú –ü—Ä–∞–≤–∏–ª–∞:\n"
            "  ‚Ä¢ –û–±—â–∞–π—Å—è –∏–ª–∏ –≤—ã–∑—ã–≤–∞–π –Ω–∞ –±–∞—Ç—Ç–ª\n"
            "  ‚Ä¢ –í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º:\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        ), reply_markup=online_menu)

    elif message.text == "–°–∞–π—Ç":
        bot.send_message(chat_id,
                         "üåê **–°–∞–π—Ç**: [–ü–µ—Ä–µ–π—Ç–∏](https://itvdn.blob.core.windows.net/cbs-images/cbs-images-a7e0d809-f232-4073-a035-0c7083421dde.PNG)",
                         parse_mode="Markdown")

    elif message.text == "–°–≤—è–∑—å":
        bot.delete_message(chat_id, message.message_id)
        bot.send_message(chat_id, (
            "üì© **–°–≤—è–∑—å —Å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º** üì©\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            "–ö–∏–¥–∞–π —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –≥–æ–ª–æ—Å –∏–ª–∏ –∫—Ä—É–∂–∫–∏!\n"
            "–Ø –ø–æ–ª—É—á—É –≤—Å—ë üëá"
        ), reply_markup=start_markup)
        user_states[chat_id] = "awaiting_feedback"

    elif message.text == "üîô –ù–∞–∑–∞–¥":
        if chat_id in searching_users:
            searching_users.remove(chat_id)
        user_states[chat_id] = None
        bot.send_message(chat_id, "üéâ **–í—ã–±–∏—Ä–∞–π —Ä–µ–∂–∏–º!**", reply_markup=start_markup)

    elif message.text in ["–ì–æ–≥–æ–ª—å", "–ü—É—à–∫–∏–Ω", "–ï—Å–µ–Ω–∏–Ω", "–õ–µ—Ä–º–æ–Ω—Ç–æ–≤", "–¢–æ–ª—Å—Ç–æ–π"]:
        rival = message.text
        bot.send_message(chat_id, (
            f"üé§ **–ë–∞—Ç—Ç–ª —Å {rival}** üé§\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"–†–∞—É–Ω–¥ 1\n"
            "–ü–∏—à–∏ —Å–≤–æ–π —Ä–µ–ø (4 —Å—Ç—Ä–æ–∫–∏):"
        ), reply_markup=game_menu)
        user_states[chat_id] = {"state": "battle", "rival": rival, "round": 1, "user_wins": 0, "rival_wins": 0}
        battle_scores[chat_id] = []

    elif message.text == "üîÑ –°–º–µ–Ω–∏—Ç—å –ø–æ—ç—Ç–∞":
        bot.send_message(chat_id, "üé§ **–í—ã–±–µ—Ä–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞**:", reply_markup=rivals_markup)
        user_states[chat_id] = None

    elif message.text == "–°–º–µ–Ω–∏—Ç—å –Ω–∏–∫":
        bot.send_message(chat_id, (
            "‚úèÔ∏è **–°–º–µ–Ω–∞ –Ω–∏–∫–∞ –¥–ª—è –±–∞—Ç—Ç–ª–æ–≤** ‚úèÔ∏è\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            "–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π –Ω–∏–∫ (Telegram-–Ω–∏–∫ –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è):"
        ))
        user_states[chat_id] = "awaiting_nick"

    elif message.text == "–°–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ":
        bot.send_message(chat_id, (
            "üìù **–°–º–µ–Ω–∞ –æ–ø–∏—Å–∞–Ω–∏—è** üìù\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            "–í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:"
        ))
        user_states[chat_id] = "awaiting_desc"

    elif message.text == "–°–º–µ–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä":
        bot.send_message(chat_id, (
            "üñº **–°–º–µ–Ω–∞ –∞–≤–∞—Ç–∞—Ä–∞** üñº\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            "–ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞:"
        ))
        user_states[chat_id] = "awaiting_avatar"

    elif message.text == "–°–ª—É—á–∞–π–Ω—ã–π —Å–æ–ø–µ—Ä–Ω–∏–∫":
        if chat_id in searching_users:
            bot.send_message(chat_id, (
                "üîç **–¢—ã —É–∂–µ –≤ –ø–æ–∏—Å–∫–µ!** üîç\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                "–ñ–¥–∏ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞..."
            ))
        else:
            searching_users.add(chat_id)
            available_users = [uid for uid in searching_users if uid != chat_id]
            if not available_users:
                bot.send_message(chat_id, (
                    "üîç **–ü–æ–∏—Å–∫ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞** üîç\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    "–ñ–¥–∏, –ø–æ–∫–∞ –∫—Ç–æ-—Ç–æ —Ç–æ–∂–µ –≤—ã–±–µ—Ä–µ—Ç '–°–ª—É—á–∞–π–Ω—ã–π —Å–æ–ø–µ—Ä–Ω–∏–∫'..."
                ), reply_markup=online_menu)
                user_states[chat_id] = {"state": "searching"}
            else:
                rival_id = random.choice(available_users)
                searching_users.remove(chat_id)
                searching_users.remove(rival_id)
                bot.send_message(chat_id, (
                    f"üí¨ **–°–æ–ø–µ—Ä–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω!** üí¨\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"–¢—ã –Ω–∞ —Å–≤—è–∑–∏ —Å @{profiles[rival_id]['nick']}\n"
                    "–ü–∏—à–∏ –∏–ª–∏ –≤—ã–∑—ã–≤–∞–π –Ω–∞ –±–∞—Ç—Ç–ª!"
                ), reply_markup=online_game)
                bot.send_message(rival_id, (
                    f"üí¨ **–°–æ–ø–µ—Ä–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω!** üí¨\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"–¢—ã –Ω–∞ —Å–≤—è–∑–∏ —Å @{username}\n"
                    "–ü–∏—à–∏ –∏–ª–∏ –≤—ã–∑—ã–≤–∞–π –Ω–∞ –±–∞—Ç—Ç–ª!"
                ), reply_markup=online_game)
                user_states[chat_id] = {"state": "online_chat", "rival_id": rival_id}
                user_states[rival_id] = {"state": "online_chat", "rival_id": chat_id}

    elif message.text == "–ü–æ ID":
        bot.send_message(chat_id, (
            "üÜî **–í—ã–±–æ—Ä –ø–æ ID** üÜî\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            "–í–≤–µ–¥–∏ ID —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:"
        ))
        user_states[chat_id] = "awaiting_online_id"

    elif message.text == "üé§ –ë–∞—Ç—Ç–ª" and chat_id in user_states and user_states[chat_id].get("state") == "online_chat":
        rival_id = user_states[chat_id]["rival_id"]
        bot.send_message(rival_id, (
            f"üé§ **–í—ã–∑–æ–≤ –Ω–∞ –±–∞—Ç—Ç–ª!** üé§\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"@{username} –≤—ã–∑—ã–≤–∞–µ—Ç —Ç–µ–±—è!"
        ), reply_markup=battle_invite)
        bot.send_message(chat_id, (
            f"üì© **–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ** üì©\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"–ñ–¥—ë–º –æ—Ç–≤–µ—Ç–∞ –æ—Ç @{profiles[rival_id]['nick']}..."
        ))
        online_battles[rival_id] = chat_id

    elif chat_id in user_states:
        state = user_states[chat_id] if isinstance(user_states[chat_id], str) else user_states[chat_id].get("state") if \
        user_states[chat_id] else None

        if state == "battle" and message.text:
            round_num = user_states[chat_id]["round"]
            rival = user_states[chat_id]["rival"]
            user_poem = message.text
            rival_poem = generate_poem(rival, round_num)
            bot.send_message(chat_id, (
                f"üé§ **–†–∞—É–Ω–¥ {round_num}** üé§\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"**–¢—ã**:\n{user_poem}\n\n"
                f"**{rival}**:\n{rival_poem}"
            ))

            user_score = evaluate_poem(user_poem, is_user=True)
            if "–û—à–∏–±–∫–∞" in str(user_score):
                bot.send_message(chat_id, user_score)
                return
            rival_score = evaluate_poem(rival_poem)
            if "–û—à–∏–±–∫–∞" in str(rival_score):
                bot.send_message(chat_id, rival_score)
                return

            battle_scores[chat_id].append((user_poem, user_score, rival_poem, rival_score))

            winner = "–¢—ã" if user_score > rival_score else rival if rival_score > user_score else "–ù–∏—á—å—è"
            bot.send_message(chat_id, (
                f"üèÖ **–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—É–Ω–¥–∞ {round_num}** üèÖ\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"–¢—ã: {user_score}/10\n"
                f"{rival}: {rival_score}/10\n"
                f"üëë –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {winner}"
            ))

            if user_score > rival_score:
                user_states[chat_id]["user_wins"] += 1
            elif rival_score > user_score:
                user_states[chat_id]["rival_wins"] += 1

            if user_states[chat_id]["user_wins"] == 2 or user_states[chat_id]["rival_wins"] == 2 or round_num == 3:
                leaderboard_battle[username]["games"] += 1
                if user_states[chat_id]["user_wins"] > user_states[chat_id]["rival_wins"]:
                    leaderboard_battle[username]["wins"] += 1
                    winner_msg = f"üèÜ –¢—ã –ø–æ–±–µ–¥–∏–ª —Å–æ —Å—á—ë—Ç–æ–º {user_states[chat_id]['user_wins']}:{user_states[chat_id]['rival_wins']}!"
                elif user_states[chat_id]["rival_wins"] > user_states[chat_id]["user_wins"]:
                    winner_msg = f"üèÜ {rival} –ø–æ–±–µ–¥–∏–ª —Å–æ —Å—á—ë—Ç–æ–º {user_states[chat_id]['rival_wins']}:{user_states[chat_id]['user_wins']}!"
                else:
                    winner_msg = "ü§ù –ù–∏—á—å—è!"

                scores_msg = "\n".join(
                    f"–†–∞—É–Ω–¥ {i + 1}: –¢—ã - {s[1]}/10 | {rival} - {s[3]}/10"
                    for i, s in enumerate(battle_scores[chat_id])
                )
                bot.send_message(chat_id, (
                    f"üéâ **–ò—Ç–æ–≥–∏ –±–∞—Ç—Ç–ª–∞** üéâ\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"{scores_msg}\n"
                    f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"{winner_msg}"
                ), reply_markup=start_markup)
                user_states[chat_id] = None
                del battle_scores[chat_id]
            else:
                user_states[chat_id]["round"] += 1
                bot.send_message(chat_id, (
                    f"üé§ **–†–∞—É–Ω–¥ {round_num + 1}** üé§\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    "–ü–∏—à–∏ —Å–≤–æ–π —Ä–µ–ø (4 —Å—Ç—Ä–æ–∫–∏):"
                ), reply_markup=game_menu)

        elif state == "rhyme_game" and message.text:
            if message.text.lower() == "—Å—Ç–æ–ø":
                rounds = user_states[chat_id]["rounds"]
                if rounds > leaderboard_rhyme[username]["longest_rounds"]:
                    leaderboard_rhyme[username]["longest_rounds"] = rounds
                bot.send_message(chat_id, (
                    f"üéµ **–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞** üéµ\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"–¢—ã –ø—Ä–æ—à—ë–ª {rounds} —Ä–∞—É–Ω–¥–æ–≤!"
                ), reply_markup=start_markup)
                user_states[chat_id] = None
            else:
                user_line = message.text
                rival_line = generate_rhyme(user_line)
                if "–û—à–∏–±–∫–∞" in rival_line:
                    bot.send_message(chat_id, rival_line)
                else:
                    bot.send_message(chat_id, (
                        f"üéµ **–†–∏—Ñ–º–∞** üéµ\n"
                        "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                        f"–¢—ã: {user_line}\n"
                        f"–Ø: {rival_line}"
                    ))
                    user_states[chat_id]["rounds"] += 1

        elif state == "awaiting_nick" and message.text:
            profiles[chat_id]["battle_nick"] = message.text
            bot.send_message(chat_id, (
                "‚úÖ **–ù–∏–∫ –¥–ª—è –±–∞—Ç—Ç–ª–æ–≤ –∏–∑–º–µ–Ω—ë–Ω!** ‚úÖ\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"–¢–µ–ø–µ—Ä—å —Ç—ã @{message.text} –≤ –±–∞—Ç—Ç–ª–∞—Ö."
            ), reply_markup=profile_menu)
            user_states[chat_id] = None

        elif state == "awaiting_desc" and message.text:
            profiles[chat_id]["desc"] = message.text
            bot.send_message(chat_id, (
                "‚úÖ **–û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!** ‚úÖ\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {message.text}"
            ), reply_markup=profile_menu)
            user_states[chat_id] = None

        elif state == "awaiting_avatar" and message.photo:
            profiles[chat_id]["avatar"] = message.photo[-1].file_id
            bot.send_message(chat_id, (
                "‚úÖ **–ê–≤–∞—Ç–∞—Ä –æ–±–Ω–æ–≤–ª—ë–Ω!** ‚úÖ\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                "–ü—Ä–æ–≤–µ—Ä—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ!"
            ), reply_markup=profile_menu)
            user_states[chat_id] = None

        elif state == "awaiting_online_id" and message.text:
            try:
                rival_id = int(message.text)
                if rival_id in profiles and rival_id != chat_id:
                    bot.send_message(chat_id, (
                        f"üí¨ **–°–æ–ø–µ—Ä–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω!** üí¨\n"
                        "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                        f"–¢—ã –Ω–∞ —Å–≤—è–∑–∏ —Å @{profiles[rival_id]['nick']}\n"
                        "–ü–∏—à–∏ –∏–ª–∏ –≤—ã–∑—ã–≤–∞–π –Ω–∞ –±–∞—Ç—Ç–ª!"
                    ), reply_markup=online_game)
                    bot.send_message(rival_id, (
                        f"üí¨ **–¢–µ–±—è –≤—ã–±—Ä–∞–ª–∏!** üí¨\n"
                        "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                        f"@{username} —Ö–æ—á–µ—Ç –æ–±—â–∞—Ç—å—Å—è –∏–ª–∏ –±–∞—Ç—Ç–ª–∏—Ç—å!"
                    ), reply_markup=online_game)
                    user_states[chat_id] = {"state": "online_chat", "rival_id": rival_id}
                    user_states[rival_id] = {"state": "online_chat", "rival_id": chat_id}
                else:
                    bot.send_message(chat_id, (
                        "‚ùå **–û—à–∏–±–∫–∞** ‚ùå\n"
                        "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                        "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —ç—Ç–æ —Ç—ã!"
                    ), reply_markup=online_menu)
            except ValueError:
                bot.send_message(chat_id, (
                    "‚ùå **–û—à–∏–±–∫–∞** ‚ùå\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    "–í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID (—á–∏—Å–ª–æ)!"
                ), reply_markup=online_menu)

        elif state == "online_chat" and message.text:
            rival_id = user_states[chat_id]["rival_id"]
            try:
                bot.send_message(rival_id, (
                    f"üí¨ **–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{username}** üí¨\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"{message.text}"
                ), reply_markup=online_game)
                bot.send_message(chat_id, (
                    f"üì§ **–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ @{profiles[rival_id]['nick']}** üì§\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"{message.text}"
                ))
            except Exception as e:
                bot.send_message(chat_id, (
                    f"‚ùå **–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏** ‚ùå\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"{str(e)}"
                ))

        elif state == "online_battle" and message.text:
            round_num = user_states[chat_id]["round"]
            rival_id = user_states[chat_id]["rival_id"]
            user_poem = message.text

            if "is_initiator" in user_states[chat_id] and user_states[chat_id]["is_initiator"]:
                battle_scores[chat_id].append((user_poem, None))
                bot.send_message(rival_id, (
                    f"üé§ **–†–∞—É–Ω–¥ {round_num}** üé§\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"@{username}:\n{user_poem}\n\n"
                    "–¢–≤–æ–π —Ö–æ–¥! –ü–∏—à–∏ —Ä–µ–ø (4 —Å—Ç—Ä–æ–∫–∏):"
                ), reply_markup=online_battle_menu)
                bot.send_message(chat_id, (
                    f"üé§ **–†–∞—É–Ω–¥ {round_num}** üé§\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"–¢–≤–æ–π —Ä–µ–ø:\n{user_poem}\n\n"
                    f"–ñ–¥—ë–º –æ—Ç–≤–µ—Ç–∞ –æ—Ç @{profiles[rival_id]['nick']}..."
                ))
                return

            # –û—Ç–≤–µ—Ç –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            rival_poem = battle_scores[chat_id][round_num - 1][0]
            user_score = evaluate_poem(user_poem, is_user=True)
            rival_score = evaluate_poem(rival_poem)
            battle_scores[chat_id][round_num - 1] = (rival_poem, rival_score, user_poem, user_score)
            battle_scores[rival_id] = battle_scores[chat_id]  # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è

            bot.send_message(chat_id, (
                f"üé§ **–†–∞—É–Ω–¥ {round_num}** üé§\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"–¢—ã:\n{user_poem}\n\n"
                f"@{profiles[rival_id]['nick']}:\n{rival_poem}"
            ))
            bot.send_message(rival_id, (
                f"üé§ **–†–∞—É–Ω–¥ {round_num}** üé§\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"@{username}:\n{rival_poem}\n\n"
                f"–¢—ã:\n{user_poem}"
            ))

            bot.send_message(chat_id, (
                f"üèÖ **–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—É–Ω–¥–∞ {round_num}** üèÖ\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"–¢—ã: {user_score}/10\n"
                f"@{profiles[rival_id]['nick']}: {rival_score}/10"
            ))
            bot.send_message(rival_id, (
                f"üèÖ **–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—É–Ω–¥–∞ {round_num}** üèÖ\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"@{username}: {rival_score}/10\n"
                f"–¢—ã: {user_score}/10"
            ))

            if user_score > rival_score:
                user_states[chat_id]["user_wins"] += 1
                user_states[rival_id]["rival_wins"] += 1
            elif rival_score > user_score:
                user_states[chat_id]["rival_wins"] += 1
                user_states[rival_id]["user_wins"] += 1

            if round_num == 3:
                leaderboard_battle[username]["games"] += 1
                leaderboard_battle[profiles[rival_id]["nick"]]["games"] += 1
                if user_states[chat_id]["user_wins"] > user_states[chat_id]["rival_wins"]:
                    leaderboard_battle[username]["wins"] += 1
                    winner_msg = f"üèÜ –¢—ã –ø–æ–±–µ–¥–∏–ª {user_states[chat_id]['user_wins']}:{user_states[chat_id]['rival_wins']}!"
                    rival_msg = f"üèÜ @{username} –ø–æ–±–µ–¥–∏–ª {user_states[chat_id]['rival_wins']}:{user_states[chat_id]['user_wins']}!"
                elif user_states[chat_id]["rival_wins"] > user_states[chat_id]["user_wins"]:
                    leaderboard_battle[profiles[rival_id]["nick"]]["wins"] += 1
                    winner_msg = f"üèÜ @{profiles[rival_id]['nick']} –ø–æ–±–µ–¥–∏–ª {user_states[chat_id]['rival_wins']}:{user_states[chat_id]['user_wins']}!"
                    rival_msg = f"üèÜ –¢—ã –ø–æ–±–µ–¥–∏–ª {user_states[chat_id]['user_wins']}:{user_states[chat_id]['rival_wins']}!"
                else:
                    winner_msg = "ü§ù –ù–∏—á—å—è!"
                    rival_msg = "ü§ù –ù–∏—á—å—è!"

                scores_msg_user = "\n".join(
                    f"–†–∞—É–Ω–¥ {i + 1}: –¢—ã - {s[1]}/10 | @{profiles[rival_id]['nick']} - {s[3]}/10"
                    for i, s in enumerate(battle_scores[chat_id])
                )
                scores_msg_rival = "\n".join(
                    f"–†–∞—É–Ω–¥ {i + 1}: @{username} - {s[1]}/10 | –¢—ã - {s[3]}/10"
                    for i, s in enumerate(battle_scores[chat_id])
                )
                bot.send_message(chat_id, (
                    f"üéâ **–ò—Ç–æ–≥–∏ –±–∞—Ç—Ç–ª–∞** üéâ\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"{scores_msg_user}\n"
                    f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"{winner_msg}"
                ), reply_markup=start_markup)
                bot.send_message(rival_id, (
                    f"üéâ **–ò—Ç–æ–≥–∏ –±–∞—Ç—Ç–ª–∞** üéâ\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"{scores_msg_rival}\n"
                    f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"{rival_msg}"
                ), reply_markup=start_markup)
                user_states[chat_id] = None
                user_states[rival_id] = None
                del battle_scores[chat_id]
                del battle_scores[rival_id]
            else:
                user_states[chat_id]["round"] += 1
                user_states[rival_id]["round"] += 1
                bot.send_message(chat_id, (
                    f"üé§ **–†–∞—É–Ω–¥ {round_num + 1}** üé§\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    "–ü–∏—à–∏ —Å–≤–æ–π —Ä–µ–ø (4 —Å—Ç—Ä–æ–∫–∏):"
                ), reply_markup=online_battle_menu)
                bot.send_message(rival_id, (
                    f"üé§ **–†–∞—É–Ω–¥ {round_num + 1}** üé§\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    f"–ñ–¥—ë–º —Ä–µ–ø–∞ –æ—Ç @{username}..."
                ))

        elif state == "awaiting_feedback":
            try:
                if message.text:
                    bot.send_message(MY_CHAT_ID, f"üì© **–°–≤—è–∑—å –æ—Ç @{username}**:\n{message.text}")
                elif message.photo:
                    bot.forward_message(MY_CHAT_ID, chat_id, message.message_id)
                elif message.video:
                    bot.forward_message(MY_CHAT_ID, chat_id, message.message_id)
                elif message.voice:
                    bot.forward_message(MY_CHAT_ID, chat_id, message.message_id)
                elif message.video_note:
                    bot.forward_message(MY_CHAT_ID, chat_id, message.message_id)
                bot.send_message(chat_id, (
                    "‚úÖ **–§–∏–¥–±–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!** ‚úÖ\n"
                    "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                    "–°–ø–∞—Å–∏–±–æ, —è –≤—Å—ë –ø–æ–ª—É—á–∏–ª!"
                ), reply_markup=start_markup)
                user_states[chat_id] = None
            except Exception as e:
                bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë!")

    else:
        bot.send_message(chat_id, (
            "üéâ **–ñ–º–∏ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ!** üéâ\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π /start –¥–ª—è –Ω–∞—á–∞–ª–∞."
        ))


@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    chat_id = call.message.chat.id
    if call.data == "battle_yes":
        if chat_id in online_battles:
            inviter_id = online_battles[chat_id]
            bot.send_message(inviter_id, (
                f"‚úÖ **@{profiles[chat_id]['nick']} —Å–æ–≥–ª–∞—Å–∏–ª—Å—è!** ‚úÖ\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                "–†–∞—É–Ω–¥ 1\n"
                "–ü–∏—à–∏ —Å–≤–æ–π —Ä–µ–ø (4 —Å—Ç—Ä–æ–∫–∏):"
            ), reply_markup=online_battle_menu)
            bot.send_message(chat_id, (
                f"üé§ **–ë–∞—Ç—Ç–ª –Ω–∞—á–∞–ª—Å—è!** üé§\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"–ñ–¥—ë–º —Ä–µ–ø–∞ –æ—Ç @{profiles[inviter_id]['nick']}..."
            ), reply_markup=online_battle_menu)
            user_states[inviter_id] = {"state": "online_battle", "rival_id": chat_id, "round": 1, "user_wins": 0,
                                       "rival_wins": 0, "is_initiator": True}
            user_states[chat_id] = {"state": "online_battle", "rival_id": inviter_id, "round": 1, "user_wins": 0,
                                    "rival_wins": 0}
            battle_scores[inviter_id] = []
            battle_scores[chat_id] = []
            del online_battles[chat_id]
    elif call.data == "battle_no":
        if chat_id in online_battles:
            inviter_id = online_battles[chat_id]
            bot.send_message(inviter_id, (
                f"‚ùå **@{profiles[chat_id]['nick']} –æ—Ç–∫–∞–∑–∞–ª—Å—è** ‚ùå\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                "–ò—â–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞!"
            ))
            del online_battles[chat_id]


bot.polling(none_stop=True)